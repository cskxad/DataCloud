<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." name="DataCloud" default="all">
	<!-- build properties -->
	<property name="build.dir" value="${basedir}/build" />
	<property name="jar.file" value="${ant.project.name}.jar" />
	<property name="tar.file" value="${ant.project.name}_Package.tar" />
	<property name="dist.dir" value="./dist/" />
	<property name="src.dir" value="./src" />
	<property name="docs.dir" value="./docs/" />
	<property name="scripts.dir" value="./scripts/" />
	<property name="lib.dir" value="./lib/" />
	<property name="bin.dir" value="./bin/" />
	<property name="conf.dir" value="./config/" />
	
	<target name="help">
		<echo>You can use the following targets:</echo>
		<echo> </echo>
		<echo>  help    : (default) Prints this message </echo>
		<echo>  all     : Cleans, compiles, and packages application</echo>
		<echo>  clean   : Deletes work directories</echo>
		<echo>  compile : Compiles all source code into class files</echo>
		<echo>  dist    : Packages the files for distribution deployable tar file</echo>
		<echo></echo>
		<echo>To clean, compile, and package all at once, run:</echo>
		<echo>prompt> ant all </echo>
	</target>
	
	<path id="compile.classpath">
		<fileset dir="./lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<target name="all" depends="clean, dist, tar"
          description="Clean work dirs, then compile and create a package"/>
    <target name="clean">
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
		<delete file="${tar.file}" />
	</target>
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="compile" depends="init" >
		<javac destdir="${build.dir}" debug="true" srcdir="${src.dir}">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>
	<target name="jar" depends="compile">
        	<jar destfile="${build.dir}/${jar.file}">
            		<fileset dir="${build.dir}"/>
        	</jar>
	</target>
	
	<target name="dist" depends="jar">
		<echo> Creating distribution package </echo>
		<mkdir dir="${dist.dir}/${scripts.dir}" />
		<mkdir dir="${dist.dir}/${bin.dir}" />
		<mkdir dir="${dist.dir}/${lib.dir}" />
		<mkdir dir="${dist.dir}/${docs.dir}" />
		<mkdir dir="${dist.dir}/${conf.dir}" />

		<copy todir="${dist.dir}/${scripts.dir}">
			<fileset dir="${scripts.dir}" />
		</copy>
		<copy todir="${dist.dir}/${bin.dir}">
			<fileset dir="${bin.dir}" />
		</copy>
		<copy todir="${dist.dir}/${lib.dir}">
			<fileset dir="${lib.dir}" />
		</copy>
		<copy todir="${dist.dir}/${docs.dir}">
			<fileset dir="${docs.dir}" />
		</copy>
		<copy todir="${dist.dir}/${conf.dir}">
			<fileset dir="${conf.dir}" />
		</copy>
		<copy todir="${dist.dir}/${lib.dir}">
			<fileset dir="${build.dir}" includes="*.jar" />
		</copy>
		<copy file="${build.dir}/${jar.file}" todir="${dist.dir}/${lib.dir}"/>
		
	</target>
	
	<target name="tar" depends="dist">
	<echo> Creating distribution tar </echo>
        <tar destfile="${basedir}/${tar.file}">
  			<tarfileset dir="${dist.dir}"/>
		</tar>
	</target>
</project>
